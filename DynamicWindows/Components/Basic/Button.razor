
<style>
    .buttonPrimary {
        display: flex;
        padding: 0;
        color: @Colors.Hex(Colors.ButtonText);
        background-color: @Colors.Hex(Colors.Button);
        border: 1px solid @Colors.Hex(Colors.ButtonBorder);
        outline: none;
    }

        .buttonPrimary:hover {
            background-color: @Colors.Hex(Colors.ButtonHover);
        }

        .buttonPrimary:active {
            box-shadow: inset 0 0 0.5em @Colors.Hex(Colors.Shadow);
        }
</style>

<button class="buttonPrimary" @onclick="DoClick">
    @if (!Icon.Equals(string.Empty))
    {
        @(new MarkupString(Icon))
    }
    @Text
</button>

@code {
    [Parameter]
    public string Text { get; set; } = string.Empty;
    [Parameter]
    public string Icon { get; set; } = string.Empty;
    [Parameter]
    public bool Disabled { get; set; } = false;
    [Parameter]
    public Action? OnClick { get; set; }

    protected async void DoClick()
    {
        if (Disabled || OnClick is null)
        {
            return;
        }

        Disabled = true;
        await InvokeAsync(OnClick);
        Disabled = false;
    }
}
